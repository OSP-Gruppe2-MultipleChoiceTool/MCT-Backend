// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultipleChoiceTool.Infrastructure.Databases;

#nullable disable

namespace MultipleChoiceTool.Infrastructure.Migrations.SqlServer
{
    [DbContext(typeof(SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.QuestionaireEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questionaires");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.QuestionaireLinkEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<Guid>("QuestionaireId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionaireId");

                    b.ToTable("QuestionaireLinks");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.StatementEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatementSetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StatementSetId");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.StatementSetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Explaination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestionaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatementImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatementTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionaireId");

                    b.HasIndex("StatementTypeId");

                    b.ToTable("StatementSets");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.StatementTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatementTypes");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.QuestionaireLinkEntity", b =>
                {
                    b.HasOne("MultipleChoiceTool.Infrastructure.Entities.QuestionaireEntity", "Questionaire")
                        .WithMany("QuestionaireLinks")
                        .HasForeignKey("QuestionaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionaire");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.StatementEntity", b =>
                {
                    b.HasOne("MultipleChoiceTool.Infrastructure.Entities.StatementSetEntity", "StatementSet")
                        .WithMany("Statements")
                        .HasForeignKey("StatementSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatementSet");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.StatementSetEntity", b =>
                {
                    b.HasOne("MultipleChoiceTool.Infrastructure.Entities.QuestionaireEntity", "Questionaire")
                        .WithMany("StatementSets")
                        .HasForeignKey("QuestionaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultipleChoiceTool.Infrastructure.Entities.StatementTypeEntity", "StatementType")
                        .WithMany("StatementSets")
                        .HasForeignKey("StatementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionaire");

                    b.Navigation("StatementType");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.QuestionaireEntity", b =>
                {
                    b.Navigation("QuestionaireLinks");

                    b.Navigation("StatementSets");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.StatementSetEntity", b =>
                {
                    b.Navigation("Statements");
                });

            modelBuilder.Entity("MultipleChoiceTool.Infrastructure.Entities.StatementTypeEntity", b =>
                {
                    b.Navigation("StatementSets");
                });
#pragma warning restore 612, 618
        }
    }
}
